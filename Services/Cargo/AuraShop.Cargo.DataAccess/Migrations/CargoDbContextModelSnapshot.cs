// <auto-generated />
using System;
using AuraShop.Cargo.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuraShop.Cargo.DataAccess.Migrations
{
    [DbContext(typeof(CargoDbContext))]
    partial class CargoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CargoCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackingNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoCompanyId");

                    b.ToTable("Cargo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoCompanyId = 1,
                            EstimatedDeliveryDate = new DateTime(2025, 2, 14, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8252),
                            OrderNumber = "ORD123456",
                            ShippedDate = new DateTime(2025, 2, 9, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8248),
                            Status = "InTransit",
                            TrackingNumber = 10001
                        },
                        new
                        {
                            Id = 2,
                            CargoCompanyId = 2,
                            DeliveredDate = new DateTime(2025, 2, 11, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8258),
                            EstimatedDeliveryDate = new DateTime(2025, 2, 11, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8258),
                            OrderNumber = "ORD123457",
                            ShippedDate = new DateTime(2025, 2, 7, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8258),
                            Status = "Delivered",
                            TrackingNumber = 10002
                        });
                });

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.CargoAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("CargoAction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionDate = new DateTime(2025, 2, 9, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8265),
                            CargoId = 1,
                            Message = "Package picked up."
                        },
                        new
                        {
                            Id = 2,
                            ActionDate = new DateTime(2025, 2, 10, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8266),
                            CargoId = 1,
                            Message = "Package in transit."
                        },
                        new
                        {
                            Id = 3,
                            ActionDate = new DateTime(2025, 2, 7, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8267),
                            CargoId = 2,
                            Message = "Package picked up."
                        },
                        new
                        {
                            Id = 4,
                            ActionDate = new DateTime(2025, 2, 11, 1, 45, 32, 371, DateTimeKind.Utc).AddTicks(8267),
                            CargoId = 2,
                            Message = "Package delivered."
                        });
                });

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.CargoCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CargoCompany");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "DHL"
                        },
                        new
                        {
                            Id = 2,
                            Name = "FedEx"
                        },
                        new
                        {
                            Id = 3,
                            Name = "UPS"
                        });
                });

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.Cargo", b =>
                {
                    b.HasOne("AuraShop.Cargo.Entity.Concrete.CargoCompany", "CargoCompany")
                        .WithMany()
                        .HasForeignKey("CargoCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoCompany");
                });

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.CargoAction", b =>
                {
                    b.HasOne("AuraShop.Cargo.Entity.Concrete.Cargo", null)
                        .WithMany("CargoActions")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuraShop.Cargo.Entity.Concrete.Cargo", b =>
                {
                    b.Navigation("CargoActions");
                });
#pragma warning restore 612, 618
        }
    }
}
