version: '3.4'

services:
  aurashop.order.webapi:
    image: order-api
    container_name: order-api
    build:
      context: .
      dockerfile: Services/Order/Presentation/AuraShop.Order.WebApi/Dockerfile
    ports:
      - "7072:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - order-db

  order-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: order-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Aurashop1.
    ports:
      - "1634:1433"
    volumes:
      - order_data:/var/opt/mssql
 
  aurashop.discount:
    image: discount-api
    container_name: discount-api
    build:
      context: .
      dockerfile: Services/Discount/AuraShop.Discount/Dockerfile
    ports:
      - "7071:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - discount-db

  discount-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: discount-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Aurashop1.
    ports:
      - "1635:1433"
    volumes:
      - discount_data:/var/opt/mssql

  aurashop.catalog:
    image: catalog-api
    container_name: catalog-api
    build:
      context: .
      dockerfile: Services/Catalog/AuraShop.Catalog/Dockerfile
    ports:
      - "7070:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - catalog-db

  catalog-db:
    image: mongo:6.0
    container_name: catalog-db
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - catalog_data:/data/db
      - catalog_config:/data/configdb

volumes:
  order_data:
  discount_data:
  catalog_data:
  catalog_config:

