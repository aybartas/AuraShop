version: '3.4'

services:
  aurashop.apigateway:
    image: ${DOCKER_REGISTRY-}aurashopapigateway
    build:
      context: .
      dockerfile: ApiGateway/AuraShop.ApiGateway/Dockerfile
    ports:
    - "5000:5000"
    
  aurashop.identityserver:
    image: ${DOCKER_REGISTRY-}aurashopidentityserver
    build:
      context: .
      dockerfile: IdentityServer/AuraShop.IdentityServer/Dockerfile
    ports:
    - "5001:5001"

  aurashop.identity-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: identity-db
    restart: always
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=TEST

  aurashop.basket:
    image: ${DOCKER_REGISTRY-}aurashopbasket
    build:
      context: .
      dockerfile: Services/Basket/AuraShop.Basket/Dockerfile

  basket-db:
    image: redis
    container_name: basket-db
    restart: always
    ports:
      - "6380:6379"
 
  aurashop.cargo.webapi:
    image: ${DOCKER_REGISTRY-}aurashopcargowebapi
    build:
      context: .
      dockerfile: Services/Cargo/AuraShop.Cargo.WebAPI/Dockerfile

  cargo-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: cargo-db
    restart: always
    ports:
      - "1437:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=


  aurashop.catalog:
    image: ${DOCKER_REGISTRY-}aurashopcatalog
    build:
      context: .
      dockerfile: Services/Catalog/AuraShop.Catalog/Dockerfile


  aurashop.discount:
    image: ${DOCKER_REGISTRY-}aurashopdiscount
    build:
      context: .
      dockerfile: Services/Discount/AuraShop.Discount/Dockerfile


  aurashop.order.webapi:
    image: ${DOCKER_REGISTRY-}aurashoporderwebapi
    build:
      context: .
      dockerfile: Services/Order/Presentation/AuraShop.Order.WebApi/Dockerfile

